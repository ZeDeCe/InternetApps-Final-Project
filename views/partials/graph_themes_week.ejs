
<div class="chart-themes" id="donut-chart"></div>

<script>
    $(document).ready(function() {
        const colors = [
            '#e6194b', // Red
            '#3cb44b', // Green
            '#ffe119', // Yellow
            '#4363d8', // Blue
            '#f58231', // Orange
            '#911eb4', // Purple
            '#46f0f0', // Cyan
            '#f032e6', // Magenta
            '#bcf60c', // Lime
            '#fabebe', // Light Pink
            '#008080', // Teal
            '#e6beff', // Lavender
            '#9a6324', // Brown
            '#800000', // Maroon
            '#808000', // Olive
            '#ffd8b1', // Light Peach
            '#000075', // Navy Blue
            '#808080', // Gray
            '#fffac8', // Light Yellow
            '#aaffc3'  // Mint
        ];
    
        getData().then(data => {
            console.log(data);
            set_graph(data);
        });
    
        function getData() {
            return new Promise((resolve, reject) => {
                $.ajax({
                    url: '/about/graph?id=2',
                    type: 'GET',
                    success: function(result, textStatus, xhr) {
                        if (xhr.status === 200 && typeof(result) === "object") {
                            resolve(result);
                        } else {
                            reject(new Error('Invalid data format')); // Reject if the format is invalid
                        }
                    },
                    error: function(err) {
                        reject(err); // Reject the promise on error
                    }
                });
            });
        }


    set_graph(dataa);

    function set_graph(data){
        // Calculate total
        const total = data.reduce((sum, d) => sum + d.quantity, 0);

        // Set up dimensions
        const width = Math.max(document.getElementById('chart_sales').clientWidth, 650);
        const height = 500;
        const radius = Math.min(width, height) / 2;

        // Create color scale with specified colors
        const color = d3.scaleOrdinal()
            .domain(data.map(d => d.theme))
            .range(colors); // Blue, Red, Yellow

        // Create SVG
        const svg = d3.select("#donut-chart")
            .append("svg")
            .attr("width", width)
            .attr("height", height)
            .append("g")
            .attr("transform", `translate(${width / 2},${height / 2})`);

        // Create tooltip
        const tooltip = d3.select("body")
            .append("div")
            .attr("class", "tooltip")
            .style("opacity", 0);

        // Compute position of each group on the pie
        const pie = d3.pie()
            .value(d => d.quantity)
            .sort(null);

        // Generate the arcs
        const arc = d3.arc()
            .innerRadius(radius * 0.6) // This creates the donut hole
            .outerRadius(radius);

        // Create the donut chart
        const paths = svg.selectAll("path")
            .data(pie(data))
            .join("path")
            .attr("d", arc)
            .attr("fill", d => color(d.data.theme))
            .attr("stroke", "white")
            .style("stroke-width", "2px")
            .on("mouseover", function(event, d) {
                const percent = ((d.data.quantity / total) * 100).toFixed(1);
                tooltip.transition()
                    .duration(200)
                    .style("opacity", .9);
                tooltip.html(`${d.data.theme}<br>${d.data.quantity} items<br>${percent}%`)
                    .style("left", (event.pageX) + "px")
                    .style("top", (event.pageY - 28) + "px");
            })
            .on("mouseout", function(d) {
                tooltip.transition()
                    .duration(500)
                    .style("opacity", 0);
            });

        // Add the total in the center
        svg.append("text")
            .attr("class", "total-label")
            .attr("dy", "-0.2em")
            .text(total);

        svg.append("text")
            .attr("class", "theme-label")
            .attr("dy", "1.2em")
            .text("Total Items");    

        // Append the "ABCD" text under the chart
        d3.select("#donut-chart")
            .append("div")
            .attr("class", "chart-description")
            .style("text-align", "center")
            .style("font-weight", "500")
            .style("font-size", "20px")
            .style("margin-top", "20px")
            .style("font-family", "Poppins")
            .html(`This chart shows how many items were sold over the last 7 Days categorized by themes.`);
    }
})
  


</script>
