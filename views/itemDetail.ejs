<!DOCTYPE html>
<html lang="en">
<head>
    <%- include('./partials/head', {title: item.name + " - Details"}); %>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>
<body>
    <%- include('./partials/header'); %>
    <div class="m-2 icon-link icon-link-hover">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-left" viewBox="0 0 16 16">
            <path fill-rule="evenodd" d="M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8"/>
        </svg>
        <a href="/" class="text-dark text-decoration-none" ><small>Back</small></a>
    </div>
    <div class="container main-div">
        <div class="item-detail-card mt-3">
            <img src="<%= item.picture %>" alt="<%= item.name %>" class="item-detail-image">
            <div class="item-detail-content">
                <h1 class="item-name"><%= item.name %></h1>
                <p class="item-price">$<%= item.price.toFixed(2) %></p>
                <p class="item-theme">Theme: <%= item.theme %></p>
                <p class="item-pieces">Pieces: <%= item.pieces %></p>
                <p><%= item.description %></p>
                <div id="averageRating" class="rating">
                    <% 
                    const avgRating = item.ratings.length 
                        ? item.ratings.reduce((sum, rating) => sum + rating.value, 0) / item.ratings.length 
                        : 0;
                    const roundedAvgRating = Math.round(avgRating * 2) / 2;
                    %>
                    <% for (let i = 1; i <= 5; i++) { %>
                        <span class="star <%= i <= roundedAvgRating ? 'filled' : '' %>">★</span>
                    <% } %>
                    <span id="star-rate-text">(<%= avgRating.toFixed(1) %> avg, <%= item.ratings.length %> ratings)</span>
                </div>
                <button id="addToCartBtn" class="view-details">Add to Cart</button>
            </div>
        </div>
        <div id="notification"></div>
        <% if (user) { %>
        <h2>Rate this Item</h2>
        <section class="item-detail-card">
            <form id="ratingForm">
                <div class="star-rating">
                    <% for (let i = 5; i >= 1; i--) { %>
                        <input type="radio" id="ratingStar<%= i %>" name="rating" value="<%= i %>" <%= (userRating && userRating.value === i) ? 'checked' : '' %>>
                        <label for="ratingStar<%= i %>">★</label>
                    <% } %>
                </div>
                <br>
                <button type="submit" class="view-details w-auto">Submit Rating</button>
            </form>
        </section>
        <h2>Add a Comment</h2>
        <section class="item-detail-card flex-column">
            
            <div class="w-100">
                <form id="commentForm" class="form-floating">
                    <textarea id="comment" name="comment" class="form-control w-100" required></textarea>
                    <label for="comment">Comments</label>
                    <br>
                    <button type="submit" class="view-details w-auto">Submit Comment</button>
                </form>
            </div>
            <% } else { %>
                <p class="alert alert-info">Please <a href="/login">log in</a> to rate or comment on this item.</p>
            <% } %>
        </section>
        <h2>Comments</h2>
        <section id="commentsSection" class="item-detail-card flex-column">
            <% if (item.comments && item.comments.length > 0) { %>
                <% item.comments.forEach(comment => { %>
                    <div class="comment w-100" data-username="<%= comment.username %>" data-comment-id="<%= comment._id %>">
                        <div class="comment-rating">
                            <% const userRating = item.ratings.find(rating => rating.username === comment.username); %>
                            <% if (userRating) { %>
                                <% for (let i = 1; i <= 5; i++) { %>
                                    <span class="star <%= i <= userRating.value ? 'filled' : '' %>">★</span>
                                <% } %>
                            <% } %>
                        </div>
                        <p class="text-break"><%= comment.text %></p>
                        <p class="comment-info">Posted by <%= comment.username %> on <%= new Date(comment.createdAt).toLocaleDateString() %></p>
                        <% if (isAdmin) { %>
                            <button class="delete-comment-btn view-details w-25">Delete Comment</button>
                        <% } %>
                    </div>
                <% }); %>
            <% } else { %>
                <p id="no-comments-yet">No comments yet.</p>
            <% } %>
        </section>
        <%-include('./partials/confirm', {message: "Are you sure you want to delete this comment?", title: "Delete Comment"})%>
    </div>

    <script>
    $(document).ready(function() {
        function showNotification(message) {
            $('#notification').text(message).fadeIn().delay(3000).fadeOut();
        }

        function updateAverageRating(newRating) {
            const avgRating = parseFloat(newRating);
            const roundedAvgRating = Math.round(avgRating * 2) / 2;
            
            $('#averageRating .star').each(function(index) {
                $(this).toggleClass('filled', index < roundedAvgRating);
            });
            
            $('#averageRating #star-rate-text').text(`(${avgRating.toFixed(1)} avg, <%= item.ratings.length %> ratings)`);
        }

        function updateUserComments(username, newRating) {
            $(`.comment[data-username="${username}"]`).each(function() {
                ($(this).children('.comment-rating').eq(0).children('.star')).each(function(index) {
                    $(this).toggleClass('filled', index < newRating);
                })
            });
        }

        function addCommentToDisplay(comment) {
            var userRating = 0
            $.ajax({
                url: `/items/<%= item._id%>/user_rating`,
                method: 'GET',
                async: false,
                success: function(data) {
                    userRating = data.rating;
                },
                error: function(data) {
                    // handle error
                }
            });
            const commentHtml = `
                <div class="comment" data-username="${comment.username}" data-comment-id="${comment._id}">
                    <div class="comment-rating">
                        ${Array(5).fill().map((_, i) => `
                            <span class="star ${i < userRating ? 'filled' : ''}">★</span>
                        `).join('')}
                    </div>
                    <p>${comment.text}</p>
                    <p class="comment-info">Posted by ${comment.username} on ${new Date().toLocaleDateString()}</p>
                    ${<%= isAdmin %> ? `
                        <button class="delete-comment-btn view-details">Delete Comment</button>
                    ` : ''}
                </div>
            `;
            $('#commentsSection').prepend(commentHtml);
        }

        // Rating form submission
        $('#ratingForm').on('submit', function(e) {
            e.preventDefault();
            const rating = $('input[name="rating"]:checked').val();
            $.ajax({
                url: '/items/<%= item._id %>/rate',
                method: 'POST',
                data: { rating: rating },
                success: function(response) {
                    showNotification('Rating submitted successfully!');
                    updateAverageRating(response.avgRating);
                    updateUserComments('<%= user %>', rating);
                },
                error: function(xhr, status, error) {
                    showNotification('Error submitting rating. Please try again.');
                }
            });
        });

        function checkRemoveNoComments() {
            const nocomments = $('#no-comments-yet')
            if(nocomments) {
                nocomments.hide()
            }
        }

        // Comment form submission
        $('#commentForm').on('submit', function(e) {
            e.preventDefault();
            const comment = $('#comment').val();
            $.ajax({
                url: '/items/<%= item._id %>/comment',
                method: 'POST',
                data: { comment: comment },
                success: function(response) {
                    showNotification('Comment submitted successfully!');
                    addCommentToDisplay({
                        _id: response.comment._id,
                        text: comment,
                        username: '<%= user %>'
                    });
                    $('#comment').val(''); // Clear the comment field
                    checkRemoveNoComments()
                },
                error: function(xhr, status, error) {
                    showNotification('Error submitting comment. Please try again.');
                }
            });
        });

        // Delete comment button click handler
        $(document).on('click', '.delete-comment-btn', function() {
            const commentId = $(this).closest('.comment').data('comment-id');
            $('#confirmDelete').data('id', commentId);
            $('#deleteModal').modal('show');
        });

        $('#confirmDelete').click(function() {
            const commentId = $(this).data('id');
            $.ajax({
                    url: `/items/<%= item._id %>/comment/${commentId}`,
                    method: 'DELETE',
                    success: function(response) {
                        showNotification('Comment deleted successfully!');
                        $(`.comment[data-comment-id="${commentId}"]`).remove();
                    },
                    error: function(xhr, status, error) {
                        showNotification('Error deleting comment. Please try again.');
                    }
            });
            $('#deleteModal').modal('hide');
        })

        // Add to Cart button logic
        $('#addToCartBtn').on('click', function() {
            $.ajax({
                url: '/cart/add/<%= item._id %>',
                method: 'GET',
                success: function(response) {
                    showNotification('Item added to cart successfully!');
                },
                error: function(xhr, status, error) {
                    showNotification('Error adding item to cart. Please try again.');
                }
            });
        });
    });
    </script>
    <%- include('./partials/footer'); %>
</body>
</html>